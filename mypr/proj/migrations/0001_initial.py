# Generated by Django 5.0.3 on 2024-03-30 08:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('departmentid', models.IntegerField(blank=True, db_column='DepartmentID', primary_key=True, serialize=False)),
                ('departmentname', models.CharField(db_column='DepartmentName', max_length=100)),
            ],
            options={
                'db_table': 'Departments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Graphicscards',
            fields=[
                ('model_graphicscards', models.CharField(db_column='Model_GraphicsCards', max_length=120, primary_key=True, serialize=False)),
                ('video_memory', models.IntegerField(db_column='Video_memory')),
                ('type_memory', models.CharField(db_column='Type_memory', max_length=30)),
                ('connectors', models.CharField(db_column='Connectors', max_length=450)),
            ],
            options={
                'db_table': 'GraphicsCards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Harddrives',
            fields=[
                ('model_harddrives', models.CharField(db_column='Model_HardDrives', max_length=120, primary_key=True, serialize=False)),
                ('disk_type', models.CharField(db_column='Disk_type', max_length=30)),
                ('space_disk', models.IntegerField(db_column='Space_disk')),
                ('speed_disk', models.IntegerField(db_column='Speed_disk')),
            ],
            options={
                'db_table': 'HardDrives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Incidenthistory',
            fields=[
                ('incidentid', models.AutoField(db_column='IncidentID', primary_key=True, serialize=False)),
                ('equipmenttype', models.CharField(choices=[('Компьютер', 'Компьютер'), ('Монитор', 'Монитор'), ('Принтер', 'Принтер')], db_column='EquipmentType', max_length=10)),
                ('serialnumber', models.CharField(db_column='SerialNumber', max_length=13)),
                ('incidentdate', models.DateTimeField(blank=True, db_column='IncidentDate', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'IncidentHistory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Motherboards',
            fields=[
                ('model_motherboards', models.CharField(db_column='Model_motherboards', max_length=120, primary_key=True, serialize=False)),
                ('chipset', models.CharField(db_column='Chipset', max_length=30)),
                ('form_factor', models.CharField(db_column='Form_factor', max_length=20)),
                ('socket', models.CharField(db_column='Socket', max_length=20)),
                ('memory_type', models.CharField(db_column='Memory_type', max_length=20)),
                ('count_slots', models.IntegerField(db_column='Count_slots')),
                ('max_memory', models.IntegerField(db_column='Max_memory')),
                ('rate_memory', models.IntegerField(db_column='Rate_memory')),
                ('motherboard_power', models.CharField(db_column='Motherboard_power', max_length=20)),
                ('connectors', models.CharField(db_column='Connectors', max_length=450)),
            ],
            options={
                'db_table': 'Motherboards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Powersupplies',
            fields=[
                ('model_powersupplies', models.CharField(db_column='Model_PowerSupplies', max_length=120, primary_key=True, serialize=False)),
                ('form_factor', models.CharField(db_column='Form_factor', max_length=20)),
                ('power_bp', models.IntegerField(db_column='Power_bp')),
            ],
            options={
                'db_table': 'PowerSupplies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Processors',
            fields=[
                ('model_processors', models.CharField(db_column='Model_processors', max_length=120, primary_key=True, serialize=False)),
                ('count_core', models.IntegerField(db_column='Count_core')),
                ('clock_rate', models.DecimalField(blank=True, db_column='Clock_rate', decimal_places=1, max_digits=2, null=True)),
            ],
            options={
                'db_table': 'Processors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rams',
            fields=[
                ('model_ram', models.CharField(db_column='Model_ram', max_length=120, primary_key=True, serialize=False)),
                ('memory_type', models.CharField(db_column='Memory_type', max_length=20)),
                ('rate_memory', models.IntegerField(db_column='Rate_memory')),
            ],
            options={
                'db_table': 'RAMs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('name', models.CharField(db_column='Name', max_length=100, primary_key=True, serialize=False)),
                ('version', models.CharField(db_column='Version', max_length=50)),
            ],
            options={
                'db_table': 'Software',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('employeeid', models.AutoField(db_column='EmployeeID', primary_key=True, serialize=False)),
                ('firstname', models.CharField(db_column='FirstName', max_length=50)),
                ('lastname', models.CharField(db_column='LastName', max_length=50)),
                ('corpus', models.IntegerField(db_column='Corpus')),
                ('office', models.IntegerField(db_column='Office')),
                ('post', models.CharField(db_column='Post', max_length=50)),
                ('tel', models.CharField(db_column='Tel', max_length=18)),
                ('adress', models.CharField(db_column='Adress', max_length=150)),
                ('email', models.CharField(db_column='Email', max_length=40)),
                ('departmentid', models.ForeignKey(db_column='DepartmentID', on_delete=django.db.models.deletion.CASCADE, to='proj.departments')),
            ],
            options={
                'db_table': 'Employees',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Monitors',
            fields=[
                ('model', models.CharField(db_column='Model', max_length=50)),
                ('serialnumber', models.CharField(db_column='SerialNumber', max_length=13, primary_key=True, serialize=False)),
                ('inventory_number', models.CharField(db_column='Inventory_number', max_length=10)),
                ('status', models.BooleanField(db_column='Status', default=True)),
                ('datу_use', models.DateField(db_column='Datу_use')),
                ('screen', models.CharField(db_column='Screen', max_length=200)),
                ('connectors', models.CharField(db_column='Connectors', max_length=450)),
                ('employeeid', models.ForeignKey(db_column='EmployeeID', on_delete=django.db.models.deletion.CASCADE, to='proj.employees')),
            ],
            options={
                'db_table': 'Monitors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Printers',
            fields=[
                ('model', models.CharField(db_column='Model', max_length=120)),
                ('serialnumber', models.CharField(db_column='SerialNumber', max_length=13, primary_key=True, serialize=False)),
                ('inventory_number', models.CharField(db_column='Inventory_number', max_length=10, unique=True)),
                ('status', models.BooleanField(db_column='Status', default=True)),
                ('ip_adress', models.CharField(blank=True, db_column='IP_adress', max_length=19, null=True)),
                ('datу_use', models.DateField(db_column='Datу_use')),
                ('connectors', models.CharField(db_column='Connectors', max_length=450)),
                ('employeeid', models.ForeignKey(db_column='EmployeeID', on_delete=django.db.models.deletion.CASCADE, to='proj.employees')),
            ],
            options={
                'db_table': 'Printers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computers',
            fields=[
                ('serialnumber', models.CharField(db_column='SerialNumber', max_length=13, primary_key=True, serialize=False)),
                ('inventory_number', models.CharField(db_column='Inventory_number', max_length=10, unique=True)),
                ('model', models.CharField(db_column='Model', max_length=120)),
                ('ip_adress', models.CharField(blank=True, db_column='IP_adress', max_length=19, null=True)),
                ('datу_use', models.DateField(db_column='Datу_use')),
                ('status', models.BooleanField(db_column='Status', default=True)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('employeeid', models.ForeignKey(db_column='EmployeeID', on_delete=django.db.models.deletion.CASCADE, to='proj.employees')),
                ('model_graphicscards', models.ForeignKey(db_column='Model_GraphicsCards', on_delete=django.db.models.deletion.CASCADE, to='proj.graphicscards')),
                ('model_harddrives', models.ForeignKey(db_column='Model_HardDrives', on_delete=django.db.models.deletion.CASCADE, to='proj.harddrives')),
                ('second_model_harddrives', models.ForeignKey(db_column='Second_Model_HardDrives', on_delete=django.db.models.deletion.CASCADE, related_name='computers_second_model_harddrives_set', to='proj.harddrives')),
                ('model_motherboards', models.ForeignKey(db_column='Model_motherboards', on_delete=django.db.models.deletion.CASCADE, to='proj.motherboards')),
                ('model_powersupplies', models.ForeignKey(db_column='Model_PowerSupplies', on_delete=django.db.models.deletion.CASCADE, to='proj.powersupplies')),
                ('model_processors', models.ForeignKey(db_column='Model_processors', on_delete=django.db.models.deletion.CASCADE, to='proj.processors')),
                ('model_ram', models.ForeignKey(db_column='Model_ram', on_delete=django.db.models.deletion.CASCADE, to='proj.rams')),
            ],
            options={
                'db_table': 'Computers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computersoftware',
            fields=[
                ('serialnumber', models.OneToOneField(db_column='SerialNumber', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='proj.computers')),
                ('installdate', models.DateField(blank=True, db_column='InstallDate', null=True)),
                ('licensekey', models.CharField(db_column='LicenseKey', max_length=50)),
                ('name', models.ForeignKey(db_column='Name', on_delete=django.db.models.deletion.CASCADE, to='proj.software')),
            ],
            options={
                'db_table': 'ComputerSoftware',
                'managed': True,
                'unique_together': {('serialnumber', 'name')},
            },
        ),
    ]
